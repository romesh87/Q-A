{"version":3,"sources":["components/Question/Answer/Answer.module.css","components/NavBar/NavBar.module.css","components/Questions/QuestionItem/QuestionItem.module.css","components/EditForm/EditForm.module.css","components/Question/Question.module.css","components/Alert/Alert.module.css","components/Profile/Profile.module.css","components/Questions/Questions.module.css","components/Questions/QuestionForm/QuestionForm.module.css","components/UI/Spinner/Spinner.module.css","components/Pagination/Pagination.module.css","components/UI/Backdrop/Backdrop.module.css","components/Question/AnswerForm/AnswerForm.module.css","components/SignUp/SignUp.module.css","components/LogIn/LogIn.module.css","components/ForgotPassword/ForgotPassword.module.css","components/ResetPassword/ResetPassword.module.css","reducers/question.js","actions/actionTypes.js","reducers/auth.js","reducers/alert.js","reducers/index.js","store.js","actions/alert.js","utils/setAuthHeader.js","actions/auth.js","components/PrivateRoute/PrivateRoute.js","actions/question.js","components/NavBar/NavBar.js","components/Questions/QuestionItem/QuestionItem.js","components/Questions/QuestionForm/QuestionForm.js","components/UI/Spinner/Spinner.js","components/Pagination/Pagination.js","components/Questions/Questions.js","components/UI/Backdrop/Backdrop.js","components/EditForm/EditForm.js","components/Question/Answer/Answer.js","components/Question/AnswerForm/AnswerForm.js","components/Question/Question.js","components/SignUp/SignUp.js","components/LogIn/LogIn.js","components/Alert/Alert.js","components/ForgotPassword/ForgotPassword.js","components/ResetPassword/ResetPassword.js","components/Profile/Profile.js","App.js","index.js"],"names":["module","exports","initialState","questions","questionsCount","searchText","question","loading","editing","error","reducer","state","action","type","payload","count","results","filter","quest","_id","answers","map","answer","id","upvotes","isFavourite","ans","text","user","token","isAuthenticated","localStorage","setItem","getItem","removeItem","concat","el","rootReducer","combineReducers","auth","alert","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","setAlert","timeOut","dispatch","uuid","v4","setTimeout","setAuthHeader","axios","defaults","headers","common","loadUser","a","get","res","data","response","connect","Component","component","rest","render","props","to","getQuestions","page","itemsPerPage","urlString","logOut","useState","setSearchText","className","styles","navBar","logo","src","alt","searchBar","onSubmit","e","preventDefault","searchHandler","placeholder","value","onChange","target","navLinks","avatar","username","name","split","href","onClick","console","log","history","deleteQuestion","delete","errors","forEach","msg","questionItem","content","format","date","buttons","length","userId","btnDelete","addQuestion","post","setText","questionForm","onSubmitHandler","disabled","Spinner","loader","Pagination","pages","Math","floor","resultsCount","pagesArray","i","push","pagination","key","onClickHandler","style","backgroundColor","currentPage","color","setCurrentPage","useEffect","textContent","window","scrollTo","top","left","BackDrop","backdrop","display","show","clearEditing","updateAnswer","quest_id","ans_id","patch","Backdrop","editForm","transform","ansId","btnCancel","btnSubmit","upvoteAnswer","questId","put","downvoteAnswer","favouriteAnswer","unfavouriteAnswer","deleteAnswer","setEditing","btnUnfavourite","btnFavourite","btnEdit","addAnswer","answerForm","getQuestion","isAuth","match","params","textAlign","marginTop","signUp","email","password","password1","password2","formData","setFormData","signup","logIn","login","stylesString","success","danger","forgotPassword","required","resetToken","newPassword","resetPassword","minLength","updateUser","fileInput","useRef","profile","FormData","append","current","files","accept","ref","URL","createObjectURL","htmlFor","App","exact","path","Questions","SignUp","LogIn","ForgotPassword","ResetPassword","Question","Profile","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.83018de6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"answer\":\"Answer_answer__6LX61\",\"user\":\"Answer_user__GAatl\",\"content\":\"Answer_content__2Skt6\",\"upvotes\":\"Answer_upvotes__2KD37\",\"buttons\":\"Answer_buttons__11wGn\",\"btnFavourite\":\"Answer_btnFavourite__1YBAP\",\"btnUnfavourite\":\"Answer_btnUnfavourite__306s9\",\"btnDelete\":\"Answer_btnDelete__Us0O5\",\"btnEdit\":\"Answer_btnEdit__3PP8J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBar\":\"NavBar_navBar__36P4w\",\"logo\":\"NavBar_logo__3hXp8\",\"navLinks\":\"NavBar_navLinks__38QZs\",\"searchBar\":\"NavBar_searchBar__LX2gJ\",\"username\":\"NavBar_username__o4ueQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"questionItem\":\"QuestionItem_questionItem__yheNY\",\"user\":\"QuestionItem_user__3fTwX\",\"content\":\"QuestionItem_content__3HYQ8\",\"buttons\":\"QuestionItem_buttons__1tb25\",\"btnDelete\":\"QuestionItem_btnDelete__1zJoC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editForm\":\"EditForm_editForm__3KHOf\",\"buttons\":\"EditForm_buttons__2QzTY\",\"btnCancel\":\"EditForm_btnCancel__1MRYV\",\"btnSubmit\":\"EditForm_btnSubmit__2ykdx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"question\":\"Question_question__2oG9X\",\"user\":\"Question_user__1i8Pu\",\"content\":\"Question_content__1o1QR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"Alert_alert__1rkHi\",\"danger\":\"Alert_danger__3z4Hs\",\"success\":\"Alert_success__2FJwX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3dzvr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"questions\":\"Questions_questions__1uqWV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"questionForm\":\"QuestionForm_questionForm__5NRNW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__fTuX5\",\"load3\":\"Spinner_load3__3VkKK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__2plzt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Backdrop_backdrop__3aIp6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"answerForm\":\"AnswerForm_answerForm__1wxGP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signup\":\"SignUp_signup__2lrMR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"LogIn_login__1Vf25\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forgotPassword\":\"ForgotPassword_forgotPassword__1KccJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"resetPassword\":\"ResetPassword_resetPassword__2MLAY\"};","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n  questions: [],\n  questionsCount: null,\n  searchText: null,\n  question: null,\n  loading: true,\n  editing: null,\n  error: null\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.GET_QUESTIONS:\n      return {\n        ...state,\n        questionsCount: action.payload.count,\n        searchText: action.payload.searchText,\n        questions: action.payload.results,\n        loading: false\n      };\n\n    case actionTypes.GET_QUESTION:\n      return {\n        ...state,\n        question: action.payload,\n        loading: false\n      };\n\n    case actionTypes.ADD_QUESTION:\n      return {\n        ...state,\n        questions: [action.payload, ...state.questions]\n      };\n\n    case actionTypes.DELETE_QUESTION:\n      return {\n        ...state,\n        questions: state.questions.filter(quest => quest._id !== action.payload)\n      };\n\n    case actionTypes.SET_EDITING:\n      return {\n        ...state,\n        editing: action.payload\n      };\n\n    case actionTypes.CLEAR_EDITING:\n      return {\n        ...state,\n        editing: null\n      };\n\n    case actionTypes.UPDATE_UPVOTES:\n      return {\n        ...state,\n        question: {\n          ...state.question,\n          answers: state.question.answers.map(answer =>\n            answer._id === action.payload.id\n              ? { ...answer, upvotes: action.payload.upvotes }\n              : answer\n          )\n        }\n      };\n\n    case actionTypes.UPDATE_FAVOURITE:\n      return {\n        ...state,\n        question: {\n          ...state.question,\n          answers: state.question.answers.map(answer =>\n            answer._id === action.payload.id\n              ? { ...answer, isFavourite: action.payload.isFavourite }\n              : answer\n          )\n        }\n      };\n\n    case actionTypes.ADD_ANSWER:\n      return {\n        ...state,\n        question: {\n          ...state.question,\n          answers: [action.payload, ...state.question.answers]\n        }\n      };\n\n    case actionTypes.UPDATE_ANSWER:\n      return {\n        ...state,\n        question: {\n          ...state.question,\n          answers: state.question.answers.map(ans =>\n            ans._id === action.payload.id\n              ? { ...ans, text: action.payload.text }\n              : ans\n          )\n        }\n      };\n\n    case actionTypes.DELETE_ANSWER:\n      return {\n        ...state,\n        question: {\n          ...state.question,\n          answers: state.question.answers.filter(\n            ans => ans._id !== action.payload\n          )\n        }\n      };\n\n    case actionTypes.QUESTION_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","// Question\nexport const GET_QUESTIONS = 'GET_QUESTIONS';\nexport const GET_QUESTION = 'GET_QUESTION';\nexport const ADD_QUESTION = 'ADD_QUESTION';\nexport const DELETE_QUESTION = 'DELETE_QUESTION';\nexport const QUESTION_ERROR = 'QUESTION_ERROR';\nexport const SET_EDITING = 'SET_EDITING';\nexport const CLEAR_EDITING = 'CLEAR_EDITING';\n\n// Answer\nexport const ADD_ANSWER = 'ADD_ANSWER';\nexport const DELETE_ANSWER = 'DELETE_ANSWER';\nexport const UPDATE_ANSWER = 'UPDATE_ANSWER';\nexport const UPDATE_UPVOTES = 'UPDATE_UPVOTES';\nexport const UPDATE_FAVOURITE = 'UPDATE_FAVOURITE';\n\n// Auth\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT = 'LOGOUT';\nexport const LOAD_USER = 'LOAD_USER';\nexport const UPDATE_USER = 'UPDATE_USER';\nexport const AUTH_FAIL = 'AUTH_FAIL';\n\n// Alert\nexport const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n  user: null,\n  token: null,\n  isAuthenticated: false,\n  loading: true\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SIGNUP_SUCCESS:\n    case actionTypes.LOGIN_SUCCESS:\n      localStorage.setItem('token', action.payload);\n      return {\n        ...state,\n        token: action.payload,\n        isAuthenticated: true,\n        loading: false\n      };\n\n    case actionTypes.LOAD_USER:\n      return {\n        ...state,\n        token: localStorage.getItem('token'),\n        isAuthenticated: true,\n        user: action.payload,\n        loading: false\n      };\n\n    case actionTypes.UPDATE_USER:\n      return {\n        ...state,\n        user: action.payload\n      };\n\n    case actionTypes.SIGNUP_FAIL:\n    case actionTypes.LOGIN_FAIL:\n    case actionTypes.AUTH_FAIL:\n    case actionTypes.LOGOUT:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = [];\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_ALERT:\n      return state.concat(action.payload);\n\n    case actionTypes.REMOVE_ALERT:\n      return state.filter(el => el.id !== action.payload);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { combineReducers } from 'redux';\n\nimport question from './question';\nimport auth from './auth';\nimport alert from './alert';\n\nconst rootReducer = combineReducers({ question, auth, alert });\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from './reducers';\n\nconst initialState = {};\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import uuid from 'uuid';\n\nimport * as actionTypes from './actionTypes';\n\nexport const setAlert = (text, type = null, timeOut = 5000) => dispatch => {\n  const id = uuid.v4();\n  dispatch({\n    type: actionTypes.SET_ALERT,\n    payload: {\n      id,\n      text,\n      type\n    }\n  });\n\n  setTimeout(() => {\n    dispatch({\n      type: actionTypes.REMOVE_ALERT,\n      payload: id\n    });\n  }, timeOut);\n};\n","import axios from 'axios';\n\nexport const setAuthHeader = token => {\n  if (token) {\n    axios.defaults.headers.common['x-auth-token'] = token;\n  } else {\n    delete axios.defaults.headers.common['x-auth-token'];\n  }\n};\n","import axios from 'axios';\n\nimport * as actionTypes from './actionTypes';\nimport { setAlert } from './alert';\nimport { setAuthHeader } from '../utils/setAuthHeader';\n\nexport const signUp = (name, email, password) => async dispatch => {\n  try {\n    const res = await axios.post('api/users/signup', { name, email, password });\n    dispatch({\n      type: actionTypes.SIGNUP_SUCCESS,\n      payload: res.data.token\n    });\n    loadUser();\n  } catch (err) {\n    err.response.data.errors.forEach(el =>\n      dispatch(setAlert(el.msg, 'danger'))\n    );\n    dispatch({\n      type: actionTypes.SIGNUP_FAIL,\n      payload: err.response\n    });\n  }\n};\n\nexport const logIn = (email, password) => async dispatch => {\n  try {\n    const res = await axios.post('api/users/login', { email, password });\n\n    dispatch({\n      type: actionTypes.LOGIN_SUCCESS,\n      payload: res.data.token\n    });\n\n    dispatch(loadUser());\n  } catch (err) {\n    err.response.data.errors.forEach(el =>\n      dispatch(setAlert(el.msg, 'danger'))\n    );\n    dispatch({\n      type: actionTypes.LOGIN_FAIL,\n      payload: err.response\n    });\n  }\n};\n\nexport const logOut = () => async dispatch => {\n  dispatch({\n    type: actionTypes.LOGOUT\n  });\n};\n\nexport const loadUser = () => async dispatch => {\n  setAuthHeader(localStorage.getItem('token'));\n\n  try {\n    const res = await axios.get('/api/users');\n\n    dispatch({\n      type: actionTypes.LOAD_USER,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: actionTypes.AUTH_FAIL,\n      payload: err.response\n    });\n  }\n};\n\nexport const updateUser = data => async dispatch => {\n  setAuthHeader(localStorage.getItem('token'));\n\n  try {\n    const res = await axios.patch('/api/users', data);\n\n    dispatch({\n      type: actionTypes.UPDATE_USER,\n      payload: res.data\n    });\n    dispatch(setAlert('Profile updated', 'success'));\n  } catch (err) {\n    err.response.data.errors.forEach(el =>\n      dispatch(setAlert(el.msg, 'danger'))\n    );\n  }\n};\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        auth.isAuthenticated === true ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to='/login' />\n        )\n      }\n    />\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import axios from 'axios';\n\nimport * as actionTypes from './actionTypes';\nimport { setAlert } from './alert';\n\nexport const getQuestions = (\n  page = null,\n  itemsPerPage = null,\n  text = null\n) => async dispatch => {\n  let urlString = '/api/questions';\n\n  if (page || itemsPerPage || text) urlString = urlString + '?';\n  if (page) urlString = urlString + `page=${page}&`;\n  if (itemsPerPage) urlString = urlString + `itemsperpage=${itemsPerPage}&`;\n  if (text) urlString = urlString + `text=${text}&`;\n\n  try {\n    const res = await axios.get(urlString);\n    dispatch({\n      type: actionTypes.GET_QUESTIONS,\n      payload: {\n        count: res.data.count,\n        results: res.data.results,\n        searchText: text\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: actionTypes.QUESTION_ERROR,\n      payload: err.response\n    });\n  }\n};\n\nexport const getQuestion = id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/questions/${id}`);\n    dispatch({\n      type: actionTypes.GET_QUESTION,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: actionTypes.QUESTION_ERROR,\n      payload: err.response\n    });\n  }\n};\n\nexport const addQuestion = text => async dispatch => {\n  try {\n    console.log(text);\n    const res = await axios.post(`/api/questions`, { text });\n    dispatch({\n      type: actionTypes.ADD_QUESTION,\n      payload: res.data\n    });\n  } catch (err) {\n    err.response.data.errors.forEach(el =>\n      dispatch(setAlert(el.msg, 'danger'))\n    );\n    dispatch({\n      type: actionTypes.QUESTION_ERROR,\n      payload: err.response\n    });\n  }\n};\n\nexport const deleteQuestion = id => async dispatch => {\n  try {\n    await axios.delete(`/api/questions/${id}`);\n    dispatch({\n      type: actionTypes.DELETE_QUESTION,\n      payload: id\n    });\n  } catch (err) {\n    err.response.data.errors.forEach(el =>\n      dispatch(setAlert(el.msg, 'danger'))\n    );\n    dispatch({\n      type: actionTypes.QUESTION_ERROR,\n      payload: err.response\n    });\n  }\n};\n\nexport const addAnswer = (id, text) => async dispatch => {\n  try {\n    const res = await axios.post(`/api/questions/${id}/answer`, { text });\n\n    dispatch({\n      type: actionTypes.ADD_ANSWER,\n      payload: res.data\n    });\n  } catch (err) {\n    err.response.data.errors.forEach(el =>\n      dispatch(setAlert(el.msg, 'danger'))\n    );\n    dispatch({\n      type: actionTypes.QUESTION_ERROR,\n      payload: err.response\n    });\n  }\n};\n\nexport const updateAnswer = (quest_id, ans_id, text) => async dispatch => {\n  try {\n    await axios.patch(`/api/questions/${quest_id}/answer/${ans_id}`, { text });\n    dispatch({\n      type: actionTypes.UPDATE_ANSWER,\n      payload: { id: ans_id, text }\n    });\n  } catch (err) {\n    err.response.data.errors.forEach(el =>\n      dispatch(setAlert(el.msg, 'danger'))\n    );\n    dispatch({\n      type: actionTypes.QUESTION_ERROR,\n      payload: err.response\n    });\n  }\n};\n\nexport const deleteAnswer = (quest_id, ans_id) => async dispatch => {\n  try {\n    await axios.delete(`/api/questions/${quest_id}/answer/${ans_id}`);\n    dispatch({\n      type: actionTypes.DELETE_ANSWER,\n      payload: ans_id\n    });\n  } catch (err) {\n    err.response.data.errors.forEach(el =>\n      dispatch(setAlert(el.msg, 'danger'))\n    );\n    dispatch({\n      type: actionTypes.QUESTION_ERROR,\n      payload: err.response\n    });\n  }\n};\n\nexport const upvoteAnswer = (questId, ansId) => async dispatch => {\n  try {\n    const res = await axios.put(\n      `/api/questions/${questId}/answer/${ansId}/upvote`\n    );\n    dispatch({\n      type: actionTypes.UPDATE_UPVOTES,\n      payload: { id: ansId, upvotes: res.data }\n    });\n  } catch (err) {\n    err.response.data.errors.forEach(el =>\n      dispatch(setAlert(el.msg, 'danger'))\n    );\n    dispatch({\n      type: actionTypes.QUESTION_ERROR,\n      payload: err.response\n    });\n  }\n};\n\nexport const downvoteAnswer = (questId, ansId) => async dispatch => {\n  try {\n    const res = await axios.put(\n      `/api/questions/${questId}/answer/${ansId}/downvote`\n    );\n    dispatch({\n      type: actionTypes.UPDATE_UPVOTES,\n      payload: { id: ansId, upvotes: res.data }\n    });\n  } catch (err) {\n    err.response.data.errors.forEach(el =>\n      dispatch(setAlert(el.msg, 'danger'))\n    );\n    dispatch({\n      type: actionTypes.QUESTION_ERROR,\n      payload: err.response\n    });\n  }\n};\n\nexport const favouriteAnswer = (questId, ansId) => async dispatch => {\n  try {\n    const res = await axios.put(\n      `/api/questions/${questId}/answer/${ansId}/favourite`\n    );\n    dispatch({\n      type: actionTypes.UPDATE_FAVOURITE,\n      payload: { id: ansId, isFavourite: res.data }\n    });\n  } catch (err) {\n    err.response.data.errors.forEach(el =>\n      dispatch(setAlert(el.msg, 'danger'))\n    );\n    dispatch({\n      type: actionTypes.QUESTION_ERROR,\n      payload: err.response\n    });\n  }\n};\n\nexport const unfavouriteAnswer = (questId, ansId) => async dispatch => {\n  try {\n    const res = await axios.put(\n      `/api/questions/${questId}/answer/${ansId}/unfavourite`\n    );\n    dispatch({\n      type: actionTypes.UPDATE_FAVOURITE,\n      payload: { id: ansId, isFavourite: res.data }\n    });\n  } catch (err) {\n    err.response.data.errors.forEach(el =>\n      dispatch(setAlert(el.msg, 'danger'))\n    );\n    dispatch({\n      type: actionTypes.QUESTION_ERROR,\n      payload: err.response\n    });\n  }\n};\n\nexport const setEditing = id => async dispatch => {\n  dispatch({ type: actionTypes.SET_EDITING, payload: id });\n};\n\nexport const clearEditing = () => async dispatch => {\n  dispatch({ type: actionTypes.CLEAR_EDITING });\n};\n\nexport const searchQuestion = text => async dispatch => {\n  try {\n    const res = await axios.get(`/api/questions/search/${text}`);\n    dispatch({\n      type: actionTypes.GET_QUESTIONS,\n      payload: res.data.results\n    });\n  } catch (err) {\n    err.response.data.errors.forEach(el =>\n      dispatch(setAlert(el.msg, 'danger'))\n    );\n    dispatch({\n      type: actionTypes.QUESTION_ERROR,\n      payload: err.response\n    });\n  }\n};\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport styles from './NavBar.module.css';\nimport { logOut } from '../../actions/auth';\nimport { getQuestions } from '../../actions/question';\n\nconst NavBar = props => {\n  const isAuthenticated = props.auth.isAuthenticated;\n  const user = props.auth.user;\n\n  const [searchText, setSearchText] = useState('');\n\n  const searchHandler = e => {\n    e.preventDefault();\n    if (searchText === '') return;\n    props.getQuestions(null, null, searchText);\n  };\n\n  return (\n    <nav className={styles.navBar}>\n      {/* <h1>Q&A</h1> */}\n      <Link to='/'>\n        <img\n          className={styles.logo}\n          src='/img/logos/q-and-a-1.png'\n          alt='logo'\n        />\n      </Link>\n\n      <form className={styles.searchBar} onSubmit={e => searchHandler(e)}>\n        <input\n          type='search'\n          placeholder=' Search..'\n          value={searchText}\n          onChange={e => setSearchText(e.target.value)}\n        />\n        {/* <button\n          type='submit'\n          style={{ display: 'none' }}\n          onClick={e => searchHandler(e)}\n        >\n          <i className='material-icons'>search</i>\n        </button> */}\n      </form>\n      {isAuthenticated ? (\n        <div className={styles.navLinks}>\n          {/* <ion-icon name='person-circle-outline'></ion-icon> */}\n          {user && <img src={`/img/users/${user.avatar}`} alt='user-img' />}\n          {user && (\n            <Link to='/profile' className={styles.username}>\n              {' '}\n              {user.name.split(' ')[0]}\n            </Link>\n          )}\n          <a\n            href='#!'\n            onClick={() => {\n              props.logOut();\n              console.log(props.history);\n            }}\n          >\n            LOG OUT\n          </a>\n        </div>\n      ) : (\n        <div className={styles.navLinks}>\n          <Link to='/login'>LOG IN</Link>\n          <Link to='/signup'>SIGN UP</Link>\n        </div>\n      )}\n    </nav>\n  );\n};\n\nNavBar.propTypes = {\n  logOut: PropTypes.func.isRequired,\n  getQuestions: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, { logOut, getQuestions })(NavBar);\n","import React from 'react';\nimport Moment from 'react-moment';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport styles from './QuestionItem.module.css';\nimport { deleteQuestion } from '../../../actions/question';\n\nconst QuestionItem = props => {\n  const auth = props.auth;\n\n  const deleteClickHandler = () => {\n    props.deleteQuestion(props.id);\n  };\n\n  return (\n    <div className={styles.questionItem}>\n      <div className={styles.user}>\n        <img src={`/img/users/${props.user.avatar}`} alt='avatar' />\n        <h3>{props.user.name}</h3>\n      </div>\n      <div className={styles.content}>\n        <h1>{props.text}</h1>\n        <div>\n          <h3>\n            Asked on: <Moment format='YYYY/MM/DD'>{props.date}</Moment>\n          </h3>\n          <div className={styles.buttons}>\n            <Link to={`/questions/${props.id}`}>\n              Answers: {props.answers.length}\n            </Link>\n            {auth.user\n              ? auth.user._id === props.userId && (\n                  <button className={styles.btnDelete}>\n                    <i className='material-icons' onClick={deleteClickHandler}>\n                      close\n                    </i>\n                  </button>\n                )\n              : null}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nQuestionItem.propTypes = {\n  user: PropTypes.object.isRequired,\n  text: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  answers: PropTypes.array.isRequired,\n  id: PropTypes.string.isRequired,\n  userId: PropTypes.string.isRequired,\n  deleteQuestion: PropTypes.func.isRequired,\n  auth: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  return { auth: state.auth };\n};\n\nexport default connect(mapStateToProps, { deleteQuestion })(QuestionItem);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport styles from './QuestionForm.module.css';\nimport { addQuestion } from '../../../actions/question';\n\nconst QuestionForm = props => {\n  const [text, setText] = useState('');\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    props.addQuestion(text);\n  };\n\n  return (\n    <form className={styles.questionForm} onSubmit={e => onSubmitHandler(e)}>\n      <textarea\n        placeholder='Ask a question..'\n        value={text}\n        onChange={e => setText(e.target.value)}\n      />\n      <button type='submit' disabled={text === ''}>\n        Submit\n      </button>\n    </form>\n  );\n};\n\nQuestionForm.propTypes = {\n  addQuestion: PropTypes.func.isRequired\n};\n\nexport default connect(null, { addQuestion })(QuestionForm);\n","import React from 'react';\n\nimport styles from './Spinner.module.css';\n\nconst Spinner = () => {\n  return <div className={styles.loader}>Loading...</div>;\n};\n\nexport default Spinner;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Pagination.module.css';\n\nconst Pagination = props => {\n  const pages = Math.floor(props.resultsCount / props.itemsPerPage);\n  let pagesArray = [];\n\n  for (let i = 1; i <= pages; i++) {\n    pagesArray.push(i);\n  }\n\n  return (\n    <nav className={styles.pagination}>\n      <ul>\n        {pagesArray.map(page => (\n          <li\n            key={page}\n            onClick={e => props.onClickHandler(e)}\n            style={{\n              backgroundColor:\n                +props.currentPage === page ? '#bdc3c7' : 'white',\n              color: +props.currentPage === page ? 'white' : 'black'\n            }}\n          >\n            {page}\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  resultsCount: PropTypes.number,\n  itemsPerPage: PropTypes.number.isRequired,\n  currentPage: PropTypes.string.isRequired,\n  onClickHandler: PropTypes.func.isRequired\n};\n\nexport default Pagination;\n","import React, { useEffect, useState, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport styles from './Questions.module.css';\nimport QuestionItem from './QuestionItem/QuestionItem';\nimport QuestionForm from './QuestionForm/QuestionForm';\nimport Spinner from '../UI/Spinner/Spinner';\nimport Pagination from '../Pagination/Pagination';\nimport { getQuestions } from '../../actions/question';\n\nconst ITEMS_PER_PAGE = 10;\n\nconst Questions = props => {\n  const questions = props.question.questions;\n  const auth = props.auth;\n\n  const [currentPage, setCurrentPage] = useState('');\n\n  useEffect(() => {\n    props.getQuestions(1, ITEMS_PER_PAGE);\n    setCurrentPage('1');\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const pageOnClickHandler = e => {\n    props.getQuestions(\n      e.target.textContent,\n      ITEMS_PER_PAGE,\n      props.question.searchText\n    );\n    setCurrentPage(e.target.textContent);\n    window.scrollTo({\n      top: 0,\n      left: 0\n    });\n  };\n\n  return (\n    <Fragment>\n      <div className={styles.questions}>\n        {auth.isAuthenticated && <QuestionForm />}\n        {props.question.loading ? (\n          <Spinner />\n        ) : (\n          questions.map(question => (\n            <QuestionItem\n              key={question._id}\n              id={question._id}\n              user={question.user}\n              userId={question.user._id}\n              text={question.text}\n              date={question.date}\n              answers={question.answers}\n            />\n          ))\n        )}\n      </div>\n      <Pagination\n        resultsCount={props.question.questionsCount}\n        itemsPerPage={ITEMS_PER_PAGE}\n        currentPage={currentPage}\n        onClickHandler={pageOnClickHandler}\n      />\n    </Fragment>\n  );\n};\n\nQuestions.propTypes = {\n  getQuestions: PropTypes.func.isRequired,\n  question: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    question: state.question,\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, { getQuestions })(Questions);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Backdrop.module.css';\n\nconst BackDrop = props => {\n  return (\n    <div\n      className={styles.backdrop}\n      style={{ display: props.show ? 'block' : 'none' }}\n    ></div>\n  );\n};\n\nBackDrop.propTypes = {\n  show: PropTypes.bool\n};\n\nexport default BackDrop;\n","import React, { useState, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport styles from './EditForm.module.css';\nimport Backdrop from '../UI/Backdrop/Backdrop';\nimport { clearEditing, updateAnswer } from '../../actions/question';\n\nconst EditForm = props => {\n  const editing = props.question.editing;\n  const question = props.question.question;\n\n  const [text, setText] = useState(props.text);\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    props.updateAnswer(question._id, props.ansId, text);\n    props.clearEditing();\n  };\n\n  const onCancelHandler = () => {\n    props.clearEditing();\n  };\n\n  return (\n    <Fragment>\n      <Backdrop show={editing !== null} />\n      <form\n        className={styles.editForm}\n        style={{\n          transform: editing ? 'translateY(-500px)' : 'translateY(-500vh)'\n        }}\n        onSubmit={e => onSubmitHandler(e)}\n      >\n        <textarea value={text} onChange={e => setText(e.target.value)} />\n        <div className={styles.buttons}>\n          <button className={styles.btnCancel} onClick={onCancelHandler}>\n            Cancel\n          </button>\n          <button\n            type='submit'\n            className={styles.btnSubmit}\n            disabled={text === '' || text === props.text}\n          >\n            Submit\n          </button>\n        </div>\n      </form>\n    </Fragment>\n  );\n};\n\nEditForm.propTypes = {\n  question: PropTypes.object.isRequired,\n  text: PropTypes.string.isRequired,\n  ansId: PropTypes.string.isRequired,\n  clearEditing: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return { question: state.question };\n};\n\nexport default connect(mapStateToProps, { clearEditing, updateAnswer })(\n  EditForm\n);\n","import React, { Fragment } from 'react';\nimport Moment from 'react-moment';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport styles from './Answer.module.css';\nimport EditForm from '../../EditForm/EditForm';\nimport {\n  upvoteAnswer,\n  downvoteAnswer,\n  favouriteAnswer,\n  unfavouriteAnswer,\n  deleteAnswer,\n  setEditing\n} from '../../../actions/question';\n\nconst Answer = props => {\n  const question = props.question.question;\n  const auth = props.auth;\n  const editing = props.question.editing;\n\n  const upvoteClickHandler = () => {\n    props.upvoteAnswer(question._id, props.id);\n  };\n\n  const downvoteClickHandler = () => {\n    props.downvoteAnswer(question._id, props.id);\n  };\n\n  const toogleFavouriteHandler = () => {\n    if (props.isFavourite) {\n      props.unfavouriteAnswer(question._id, props.id);\n    } else {\n      props.favouriteAnswer(question._id, props.id);\n    }\n  };\n\n  const deleteClickHandler = () => {\n    props.deleteAnswer(question._id, props.id);\n  };\n\n  const editClickHandler = () => {\n    props.setEditing(props.id);\n  };\n\n  return (\n    <Fragment>\n      {editing === props.id && <EditForm text={props.text} ansId={props.id} />}\n      <div\n        className={styles.answer}\n        style={\n          props.isFavourite\n            ? { backgroundColor: '#d8f5e4' }\n            : { backgroundColor: '#ecf0f1' }\n        }\n      >\n        <div className={styles.user}>\n          <img src={`/img/users/${props.avatar}`} alt='avatar' />\n          <h3>{props.username}</h3>\n        </div>\n        <div className={styles.content}>\n          <p>{props.text}</p>\n          <div>\n            <h3>\n              Answered on: <Moment format='YYYY/MM/DD'>{props.date}</Moment>\n            </h3>\n            <div className={styles.buttons}>\n              {auth.user._id === question.user._id && (\n                <button\n                  className={\n                    props.isFavourite\n                      ? styles.btnUnfavourite\n                      : styles.btnFavourite\n                  }\n                  onClick={toogleFavouriteHandler}\n                >\n                  <span>\n                    {props.isFavourite ? 'Unmark favourite' : 'Mark favourite'}\n                  </span>\n                </button>\n              )}\n              {auth.user._id === props.userId && (\n                <div className={styles.buttons}>\n                  <button className={styles.btnEdit} onClick={editClickHandler}>\n                    Edit\n                  </button>\n                  <button className={styles.btnDelete}>\n                    <i className='material-icons' onClick={deleteClickHandler}>\n                      close\n                    </i>\n                  </button>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n\n        <div className={styles.upvotes}>\n          <h4>Upvotes</h4>\n          <i className='material-icons md-48' onClick={upvoteClickHandler}>\n            expand_less\n          </i>\n          <p>{props.upvotes.length}</p>\n          <i className='material-icons md-48' onClick={downvoteClickHandler}>\n            expand_more\n          </i>\n          {props.isFavourite && (\n            <i className='material-icons md-48' style={{ color: '#27ae60' }}>\n              check\n            </i>\n          )}\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nAnswer.propTypes = {\n  id: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired,\n  userId: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  upvotes: PropTypes.array,\n  isFavourite: PropTypes.bool.isRequired,\n  upvoteAnswer: PropTypes.func.isRequired,\n  downvoteAnswer: PropTypes.func.isRequired,\n  favouriteAnswer: PropTypes.func.isRequired,\n  unfavouriteAnswer: PropTypes.func.isRequired,\n  setEditing: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth,\n    question: state.question\n  };\n};\n\nexport default connect(mapStateToProps, {\n  upvoteAnswer,\n  downvoteAnswer,\n  favouriteAnswer,\n  unfavouriteAnswer,\n  deleteAnswer,\n  setEditing\n})(Answer);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport styles from './AnswerForm.module.css';\nimport { addAnswer } from '../../../actions/question';\n\nconst AnswerForm = props => {\n  const question = props.question.question;\n\n  const [text, setText] = useState('');\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    props.addAnswer(question._id, text);\n  };\n\n  return (\n    <form className={styles.answerForm} onSubmit={e => onSubmitHandler(e)}>\n      <textarea\n        placeholder='Answer question..'\n        value={text}\n        onChange={e => setText(e.target.value)}\n      />\n      <button type='submit' disabled={text === ''}>\n        Submit\n      </button>\n    </form>\n  );\n};\n\nAnswerForm.propTypes = {\n  addAnswer: PropTypes.func.isRequired,\n  question: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    question: state.question\n  };\n};\n\nexport default connect(mapStateToProps, { addAnswer })(AnswerForm);\n","import React, { useEffect, Fragment } from 'react';\nimport Moment from 'react-moment';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport styles from './Question.module.css';\nimport Spinner from '../UI/Spinner/Spinner';\nimport Answer from './Answer/Answer';\nimport AnswerForm from './AnswerForm/AnswerForm';\nimport { getQuestion } from '../../actions/question';\n\nconst Question = props => {\n  const loading = props.question.loading;\n  const question = props.question.question;\n  const isAuth = props.auth.isAuthenticated;\n\n  useEffect(() => {\n    props.getQuestion(props.match.params.id);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (!isAuth) return <Redirect to='/login' />;\n\n  return loading ||\n    question === null ||\n    question._id !== props.match.params.id ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      {/* <EditForm /> */}\n      <div className={styles.question}>\n        <div className={styles.user}>\n          <img src={`/img/users/${question.user.avatar}`} alt='avatar' />\n          <h3>{question.user.name}</h3>\n        </div>\n        <div className={styles.content}>\n          <h1>{question.text}</h1>\n          <div>\n            <h3>\n              Asked on: <Moment format='YYYY/MM/DD'>{question.date}</Moment>\n            </h3>\n            <h4>Answers: {question.answers.length}</h4>\n          </div>\n        </div>\n      </div>\n      <AnswerForm />\n      {question.answers.length > 0 ? (\n        question.answers.map(ans => (\n          <Answer\n            key={ans._id}\n            id={ans._id}\n            username={ans.user.name}\n            userId={ans.user._id}\n            avatar={ans.user.avatar}\n            text={ans.text}\n            date={ans.date}\n            upvotes={ans.upvotes}\n            isFavourite={ans.isFavourite}\n          />\n        ))\n      ) : (\n        <p style={{ textAlign: 'center', marginTop: '20px' }}>No answers yet</p>\n      )}\n    </Fragment>\n  );\n};\n\nQuestion.propTypes = {\n  question: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return { question: state.question, auth: state.auth };\n};\n\nexport default connect(mapStateToProps, { getQuestion })(Question);\n","import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport styles from './SignUp.module.css';\nimport { signUp } from '../../actions/auth';\n\nconst SignUp = props => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password1: '',\n    password2: ''\n  });\n\n  const { name, email, password1, password2 } = formData;\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    if (password1 !== password2) {\n      return window.alert(\"Password doesn't match!\");\n    }\n\n    props.signUp(name, email, password1);\n  };\n\n  if (props.auth.isAuthenticated) return <Redirect to='/' />;\n\n  return (\n    <div className={styles.signup}>\n      <h1>Sign Up</h1>\n      <form onSubmit={e => onSubmitHandler(e)}>\n        <input\n          type='text'\n          name='name'\n          value={formData.name}\n          placeholder=' Name'\n          onChange={e =>\n            setFormData({ ...formData, [e.target.name]: e.target.value })\n          }\n        />\n        <input\n          type='email'\n          name='email'\n          value={formData.email}\n          placeholder=' Email'\n          onChange={e =>\n            setFormData({ ...formData, [e.target.name]: e.target.value })\n          }\n        />\n        <small>*This website uses Gravatar </small>\n        <input\n          type='password'\n          name='password1'\n          value={formData.password1}\n          placeholder=' Password'\n          onChange={e =>\n            setFormData({ ...formData, [e.target.name]: e.target.value })\n          }\n        />\n        <input\n          type='password'\n          name='password2'\n          value={formData.password2}\n          placeholder=' Confirm Password'\n          onChange={e =>\n            setFormData({ ...formData, [e.target.name]: e.target.value })\n          }\n        />\n        <button type='submit'>Sign Up</button>\n      </form>\n      <p>\n        Already registered? <Link to='/login'> Log In</Link>\n      </p>\n    </div>\n  );\n};\n\nSignUp.propTypes = {\n  signUp: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, { signUp })(SignUp);\n","import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport styles from './LogIn.module.css';\nimport { logIn } from '../../actions/auth';\n\nconst LogIn = props => {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n\n  const { email, password } = formData;\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    props.logIn(email, password);\n  };\n\n  if (props.auth.isAuthenticated) return <Redirect to='/' />;\n\n  return (\n    <div className={styles.login}>\n      <h1>Log In</h1>\n      <form onSubmit={e => onSubmitHandler(e)}>\n        <input\n          type='email'\n          name='email'\n          value={formData.email}\n          placeholder='Email'\n          onChange={e =>\n            setFormData({ ...formData, [e.target.name]: e.target.value })\n          }\n        />\n        <input\n          type='password'\n          name='password'\n          value={formData.password}\n          placeholder='Password'\n          onChange={e =>\n            setFormData({ ...formData, [e.target.name]: e.target.value })\n          }\n        />\n        <button type='submit'>Log In</button>\n      </form>\n      <p>\n        Not yet registered? <Link to='/signup'> Sign Up</Link>\n      </p>\n      <p>\n        Forgot your password? <Link to='/forgotPassword'> Click here</Link>\n      </p>\n    </div>\n  );\n};\n\nLogIn.propTypes = {\n  logIn: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, { logIn })(LogIn);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport styles from './Alert.module.css';\n\nconst Alert = props => {\n  return props.alert !== null && props.alert.length > 0\n    ? props.alert.map(el => {\n        let stylesString = styles.alert;\n        if (el.type === 'success') {\n          stylesString = stylesString + ' ' + styles.success;\n        } else if (el.type === 'danger') {\n          stylesString = stylesString + ' ' + styles.danger;\n        }\n\n        return (\n          <div key={el.id} className={stylesString}>\n            <p>{el.text}</p>\n          </div>\n        );\n      })\n    : null;\n};\n\nAlert.propTypes = {\n  alert: PropTypes.array\n};\n\nconst mapStateToProps = state => {\n  return {\n    alert: state.alert\n  };\n};\n\nexport default connect(mapStateToProps)(Alert);\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\nimport styles from './ForgotPassword.module.css';\n//import { logIn } from '../../actions/auth';\nimport { setAlert } from '../../actions/alert';\n\nconst ForgotPassword = props => {\n  const [formData, setFormData] = useState({\n    email: ''\n  });\n\n  const { email } = formData;\n\n  const onSubmitHandler = async e => {\n    e.preventDefault();\n    try {\n      await axios.post('http://localhost:3000/api/users/forgotPassword', {\n        email\n      });\n      props.setAlert(`Email sent to ${email}`, 'success');\n    } catch (err) {\n      props.setAlert(err.response.data.msg, 'danger');\n    }\n  };\n\n  if (props.auth.isAuthenticated) return <Redirect to='/' />;\n\n  return (\n    <div className={styles.forgotPassword}>\n      <h1>Enter your email</h1>\n      <form onSubmit={e => onSubmitHandler(e)}>\n        <input\n          type='email'\n          name='email'\n          value={formData.email}\n          placeholder='Email'\n          onChange={e =>\n            setFormData({ ...formData, [e.target.name]: e.target.value })\n          }\n          required\n        />\n        <button type='submit'>Send Email</button>\n      </form>\n    </div>\n  );\n};\n\nForgotPassword.propTypes = {\n  setAlert: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, { setAlert })(ForgotPassword);\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\nimport styles from './ResetPassword.module.css';\nimport { setAlert } from '../../actions/alert';\n\nconst ResetPassword = props => {\n  const [formData, setFormData] = useState({\n    password1: '',\n    password2: ''\n  });\n\n  const { password1, password2 } = formData;\n\n  const onSubmitHandler = async e => {\n    e.preventDefault();\n    if (password1 !== password2) {\n      return props.setAlert(\"Password doesn't match\", 'danger');\n    }\n\n    try {\n      await axios.post(\n        `http://localhost:3000/api/users/resetPassword/${props.match.params.resetToken}`,\n        { newPassword: password1 }\n      );\n      props.setAlert(`Password has been successfully reset`, 'success');\n      setTimeout(() => {\n        props.history.push('/login');\n      }, 5000);\n    } catch (err) {\n      props.setAlert('Error resetting password', 'danger');\n    }\n  };\n\n  if (props.auth.isAuthenticated) return <Redirect to='/' />;\n\n  return (\n    <div className={styles.resetPassword}>\n      <h1>Enter new password</h1>\n      <form onSubmit={e => onSubmitHandler(e)}>\n        <input\n          type='password'\n          name='password1'\n          value={formData.password1}\n          placeholder='New Password'\n          onChange={e =>\n            setFormData({ ...formData, [e.target.name]: e.target.value })\n          }\n          minLength='6'\n        />\n        <input\n          type='password'\n          name='password2'\n          value={formData.password2}\n          placeholder=' Confirm Password'\n          onChange={e =>\n            setFormData({ ...formData, [e.target.name]: e.target.value })\n          }\n          minLength='6'\n        />\n        <button type='submit'>Reset</button>\n      </form>\n    </div>\n  );\n};\n\nResetPassword.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, { setAlert })(ResetPassword);\n","import React, { useState, useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport styles from './Profile.module.css';\nimport { updateUser } from '../../actions/auth';\n\nconst Profile = props => {\n  const user = props.auth.user;\n  const fileInput = useRef();\n\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    avatar: ''\n  });\n\n  useEffect(() => {\n    setFormData({\n      ...formData,\n      name: user.name,\n      email: user.email,\n      avatar: `/img/users/${user.avatar}`\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const { name, email } = formData;\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n\n    const data = new FormData();\n    data.append('name', name);\n    data.append('email', email);\n    data.append('photo', fileInput.current.files[0]);\n\n    props.updateUser(data);\n  };\n\n  console.log(styles.profile);\n  //if (props.auth.isAuthenticated) return <Redirect to='/' />;\n\n  return (\n    <div className={styles.profile}>\n      <h1>Edit user info</h1>\n      <form onSubmit={e => onSubmitHandler(e)}>\n        <span>Name:</span>\n        <input\n          type='text'\n          name='name'\n          value={formData.name}\n          placeholder=' Name'\n          onChange={e =>\n            setFormData({ ...formData, [e.target.name]: e.target.value })\n          }\n        />\n        <span>Email:</span>\n        <input\n          type='email'\n          name='email'\n          value={formData.email}\n          placeholder=' Email'\n          onChange={e =>\n            setFormData({ ...formData, [e.target.name]: e.target.value })\n          }\n        />\n\n        <input\n          type='file'\n          name='photo'\n          id='photo'\n          accept='image/*'\n          ref={fileInput}\n          style={{ display: 'none' }}\n          onChange={e => {\n            setFormData({\n              ...formData,\n              avatar: URL.createObjectURL(e.target.files[0])\n            });\n            console.log(URL.createObjectURL(e.target.files[0]));\n          }}\n        />\n        <label htmlFor='photo'>Choose new photo</label>\n        <img src={formData.avatar} alt='avatar' />\n\n        <button type='submit'>Save</button>\n      </form>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  updateUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, { updateUser })(Profile);\n","import React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport './App.module.css';\n// import { setAuthHeader } from './utils/setAuthHeader';\nimport { loadUser } from './actions/auth';\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\nimport NavBar from './components/NavBar/NavBar';\nimport Questions from './components/Questions/Questions';\nimport Question from './components/Question/Question';\nimport SignUp from './components/SignUp/SignUp';\nimport LogIn from './components/LogIn/LogIn';\nimport Alert from './components/Alert/Alert';\nimport ForgotPassword from './components/ForgotPassword/ForgotPassword';\nimport ResetPassword from './components/ResetPassword/ResetPassword';\nimport Profile from './components/Profile/Profile';\n\nfunction App(props) {\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <NavBar />\n        <section className='container'>\n          <Alert />\n          <Switch>\n            <Route exact path='/' component={Questions} />\n            <Route exact path='/signup' component={SignUp} />\n            <Route exact path='/login' component={LogIn} />\n            {/* <Route exact path='/questions/:id' component={Question} /> */}\n            <Route exact path='/forgotPassword' component={ForgotPassword} />\n            <Route\n              exact\n              path='/resetPassword/:resetToken'\n              component={ResetPassword}\n            />\n            <PrivateRoute exact path='/questions/:id' component={Question} />\n            <PrivateRoute exact path='/profile' component={Profile} />\n          </Switch>\n        </section>\n        <footer>\n          <p>&copy; 2020 Roman Shishkin</p>\n          <p>roman.shishkin87@gmail.com</p>\n        </footer>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}